@model eCommerce_BiliBits.Models.Product

<div class="container my-5">
    <div class="row mb-5">
        <form class="col-md-6" asp-action="DeleteProduct" asp-controller="Home" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <button type="submit" class="btn btn-outline-danger btn-lg me-2">Remove From Listing</button>
        </form>

    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="border p-3 rounded shadow-sm bg-white">
                <img src="@Model.ImageUrl" class="img-fluid" alt="@Model.Name" />
            </div>
        </div>
        <div class="col-md-6">
            <h2 class="fw-bold">@Model.Name</h2>
            <p class="text-muted">@Model.Description</p>
            <h4 class="text-danger fw-semibold mb-4">@Model.Price.ToString("C")</h4>

            <div class="mb-3">
                <span class="text-warning">
                    &#9733; &#9733; &#9733; &#9733; &#9734;
                </span>

                <span class="text-muted">@(Model.Reviews?.Count() ?? 0) review(s)</span>
            </div>

            <div class="d-grid gap-2 d-md-block">
                <button class="btn btn-outline-primary btn-lg me-2">Add to Cart</button>
                <a href="/" class="btn btn-secondary btn-lg">Back</a>
            </div>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-12">
           
            @if (Model.Reviews != null)
            {
                 <h5 class="mb-3">Customer Reviews</h5>

                foreach ( var reviews in Model.Reviews)
                {
                    <div class="border rounded p-3 mb-3 bg-light">
                        <strong>@reviews.UserId</strong> <small class="text-muted">· @reviews.CreatedDate?.ToString("MMMM dd, yyyy")</small>
                        <div class="text-warning mb-1">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <span class="star-rating @(i <= reviews.Rating ? "filled" : "")">&#9733;</span>
                            }
                            <div id="ratingDisplay" class="mt-2">Ratings: @reviews.Rating</div>
                        </div>
                        <p class="mb-0">@reviews.Comment</p>
                    </div>
                }

            }

            <h5 class="mt-5">Leave a Review</h5>

            <form method="post" asp-action="AddReview" asp-controller="Home">
                <input type="hidden" name="ProductId" value="@Model.Id" />

                <div class="mb-3">
                    <label class="form-label" id="ratingLabel">Rating:</label>
                    <div class="d-flex gap-1">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <div>
                                <input type="radio" class="btn-check" name="Rating" value="@i" id="star_@i" autocomplete="off" @(i == (ViewBag.SelectedRating ?? 0) ? "checked" : "") />
                                <label class="btn btn-outline-warning" for="star_@i">&#9733;</label>
                            </div>
                        }
                    </div>  
                </div>


                <div class="mb-3">
                    <label for="Comment" class="form-label">Comment:</label>
                    <textarea class="form-control" name="Comment" rows="3" required></textarea>
                </div>

                <button type="submit" class="btn btn-success">Submit Review</button>
            </form>
    
        </div>
    </div>
</div>

<style>
    .star-rating {
        color: gray;
        font-size: 20px;
    }

    .star-rating.filled {
        color: gold;
    }
</style>

@section Scripts {
    <script>
        const ratingRadios = document.querySelectorAll('input[name="Rating"]');
        const ratingLabel = document.getElementById('ratingLabel');

        function updateStars() {
            const selectedRating = document.querySelector('input[name="Rating"]:checked')?.value || 0;
            ratingLabel.textContent = 'Rating: ' + selectedRating   ;

            ratingRadios.forEach((radio, index) => {
                const label = radio.nextElementSibling;
                if ((index + 1) < selectedRating) {
                    label.classList.add('btn-warning');
                    label.classList.remove('btn-outline-warning');
                } else {
                    label.classList.add('btn-outline-warning');
                    label.classList.remove('btn-warning');
                }
            });
        }

        ratingRadios.forEach(radio => {
            radio.addEventListener('change', updateStars);
        });

        updateStars();
    </script>

}